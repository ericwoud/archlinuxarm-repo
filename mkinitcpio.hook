#!/usr/bin/ash
# SPDX-License-Identifier: GPL-2.0-only

chainload() {
  echo "emmc ok"
  newroot="/dev/disk/by-partlabel/${target}-nvme-root"
  [[ ! -b "${newroot}" ]] && return
  echo "newroot ok"
  mkdir -p /nvme
  mount --source ${newroot} --target /nvme
  [[ ! -d "/nvme/boot/bootcfg" ]] && return
  echo "bootcfg ok"
  ln -s /nvme/boot /boot
  bpir-kexec
  [[ $? == 0 ]] && reboot -f  
}

run_hook() {
  mkdir -p /usr/lib/initcpio
  ln -s /bin/busybox /usr/lib/initcpio/busybox
  if [[ "$(echo ${root} | cut -d'=' -f1)" == "PARTLABEL" ]]; then
    target=$(echo ${root} | cut -d'=' -f2 | cut -d'-' -f1)
    device=$(echo ${root} | cut -d'=' -f2 | cut -d'-' -f2)
  fi
  read -n 1 -t 0.3 char
  if [[ "$char" == "E" ]]; then
    echo "Executing 'bpir-flash2emmc /tmp/bpir.img.gz' ..."
    bpir-flash2emmc /tmp/bpir.img.gz
    echo "Entering busybox ash shell."
    ash
  elif [[ "$char" == "x" ]]; then
    echo "Entering busybox ash shell."
    echo "Enter 'bpir-flash2emmc /tmp/bpir.img.gz' to flash it to the EMMC on th R3."
    echo "Enter 'exit' to continue booting."
    ash
  elif [[ "${device}" == "emmc" ]] && [[ "$char" != "e" ]]; then
    echo "Trying to chainload, root=${root}"
    chainload
  fi
}
